/* typography */
h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
p, .text {
  margin: 0 0 ($_ / 2);
}
h3, .h3 {
  line-height: 2;
}

.show-heading-numbers [data-heading]::before {
  content: attr(data-heading) ' ';
}

blockquote {
  border-left: .5rem solid $_color_lighter;
  padding: ($_ / 2) 0 ($_ / 2) 2.5em;
  margin: 0 0 ($_ / 2);

  footer {
    text-align: right;

    cite {
      color: $_color_gray;

      &::before {
        content: '— '
      }
    }
  }
}

figure {
  margin: 0 0 ($_ / 2)
}

img {
  border: .1rem solid $_color_light;
  display: inline-block;
  margin: 0 0 ($_ / 2);
  padding: .4rem;
}

/* lists */
dl,
ol,
ul {
  &.list-upper-roman {
    counter-reset: list-upper-roman;
    list-style-type: none;
    padding: 0;

    > li,
    > dt {
      &::before {
        counter-increment: list-upper-roman;
        content: counter(list-upper-roman, upper-roman) ' – ';
        font-weight: bold;
      }
    }
  }
}

dl {
  margin: 0 0 ($_ / 2);

  > dt {
    float: left;

    &::after {
      content: ': ';
      white-space: pre;
    }
  }

  > dd {
    margin: 0 0 ($_ / 2);

    &:last-child {
      margin-bottom: 0;
    }
  }
}

ol,
ul {
  margin: 0 0 ($_ / 2);
  padding: 0 0 0 1em;
}

/* tables */
table {
  border: .1rem solid $_color_light;
  border-top: 0;
  margin: 0 0 ($_ / 2 - .1rem);

  tr {
    position: relative;

    &::after {
      @include position(absolute, null 0);

      border-top: .1rem solid $_color_light;
      content: '';
    }
  }

  > thead:first-child > tr:first-child::after {
    content: none;
  }

  caption {
    background-color: $_color_lightest;
    border: .1rem solid $_color_light;
    border-bottom: 0;
    padding: ($_ / 2 - .1rem) .5em ($_ / 2);
  }

  th,
  td {
    padding: ($_ / 2) .5em;
  }

  &.borderless {
    border: 0;
    margin-bottom: ($_ / 2);
  }

  &.army-list {
    > caption {
      background: none;
    }

    > colgroup > col {
      width: auto !important;
    }

    > thead {
      > tr > td {
        text-align: center;
      }
    }

    > tbody {
      > tr {
        &.bordered {
          border-top: .1rem solid $_color_light;
          padding-top: ($_ / 2 - .1rem);
        }

        &.striped {
          background: $_color_lightest;
        }
      }
    }

    tr {
      position: static;

      &::after {
        @include position(static, auto);

        border-top: auto;
        content: none;
      }
    }

    td, th {
      vertical-align: top;
    }

    ul {
      list-style: none;
      margin: 0;
      padding: 0;

      > li {
        margin-bottom: ($_ / 2);

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}

.table-responsive {
  overflow-x: auto;
  margin-bottom: ($_ / 2);

  table:not(.army-list),
  > table.army-list {
    margin-bottom: 0;
  }
}

/* IDs */
#cover,
#copyright,
#reference_sheet {
  display: none;
}

#examples_of_formations {
  border: .1rem solid $_color_light;
  margin: 0 auto ($_ / 2 - .2rem);
  max-width: 391px;

  figcaption {
    background: $_color_lightest;
    border-bottom: .1rem solid $_color_light;
    font-weight: bold;
    padding: ($_ / 2) 1em ($_ / 2 - .1rem);
  }

  > div {
    padding: ($_ / 2) 1em;
  }

  img:last-child {
    margin: 0;
  }
}

#example_initiatve_values,
#needing_7_to_hit {
  border: 0;
  margin: 0 auto;
  width: auto;
}

#examples_of_terrain {
  img {
    @include margin(null auto);

    display: block;
  }

  @include grid-media($md-neat-grid) {
    figure {
      display: table;
    }

    img,
    figcaption {
      display: table-cell;
      margin: 0;
      vertical-align: top;
    }

    figcaption {
      padding-right: 1em;
    }

    #hull_down_example {
      margin-right: 1em;
      min-width: 504px;

      + figcaption {
        @include padding(null 0 null 1em);
      }
    }

    #partial_cover_example {
      margin-left: 1em;
      min-width: 461px;
    }
  }
}

#weapon_fire_arcs {
  @include margin(null auto 0);

  display: block;

  @include grid-media($md-neat-grid) {
    float: right;

    ~ p {
      margin-right: 395px;
      padding-right: 1em;
    }
  }
}

#needing_7_to_hit {
  margin-bottom: 0;
}

.barrage-table {
  text-align: center;

  > thead > tr:last-child::after {
    border: none;
  }
}

/* classes */
#abbreviations,
.design-concept,
.example-of-play,
aside.faq,
.short-story,
.special-rule {
  border: .1rem solid $_color_light;
  margin: 0 auto ($_ / 2 - .2rem);

  header,
  h1, .h1,
  h2, .h2,
  h3, .h3,
  h4, .h4,
  h5, .h5,
  h6, .h6 {
    @include _($_font_size_h4);

    background: $_color_lightest;
    border-bottom: .1rem solid $_color_light;
    font-weight: bold;
    margin: 0;
    padding: ($_ / 2) 1em ($_ / 2 - .1rem);

    + .faq {
      margin-top: ($_ / 2);
    }
  }

  > div {
    padding: ($_ / 2) 1em;
    > :last-child {
      margin-bottom: 0;
    }
  }
}
#abbreviations {
  @include grid-media($md-neat-grid) {
    > div {
      @include grid-collapse();
      @include grid-container();

      > dl {
        @include grid-column(4);
      }
    }
  }

  @include grid-media($lg-neat-grid) {
    > div {
      @include grid-collapse();

      > dl {
        @include grid-column(4);
      }
    }
  }

  @include grid-media($xl-neat-grid) {
    > div {
      @include grid-collapse();

      > dl {
        @include grid-column(4);
      }
    }
  }
}
.design-concept header::before {
  content: 'Design Concept: ';
}
aside.faq > div > h4 {
  display: none;
}
.faq {
  dl {
    margin: 0;

    > dt {
      float: none;

      &::before {
        content: 'Q: ';
      }

      &::after {
        content: none;
      }

      + dd::before {
        content: 'A: ';
      }
    }
  }
}
.example-of-play header::before {
  content: 'Example of Play: ';
}
.special-rule {
  h1, .h1,
  h2, .h2,
  h3, .h3,
  h4, .h4,
  h5, .h5,
  h6, .h6 {
    &::before {
      content: 'Special Rule: ';
    }
  }

  .faq {
    margin: 0 1em;
  }
}

.unit {
  @include clearfix();

  overflow-x: auto;

  .stats {
    display: table;
    width: 100%;

    > * {
      display: table-cell;
      padding: 0 0.5em;
      text-align: center;

      &::before { display: block; }

      &.name {
        text-align: left;

        &::before { content: 'Name'; }
      }
      &.type::before { content: 'Type'; }
      &.speed::before { content: 'Speed'; }
      &.armour::before { content: 'Armour'; }
      &.cc::before { content: 'CC'; }
      &.ff::before { content: 'FF'; }
    }
  }
  .weapons {
    display: table;
    width: 100%;
  }
  .weapon {
    display: table-row-group;

    &:first-child > .weapon-line:first-child > * {
      &::before { display: block; }

      &.name::before { content: 'Weapons'; }
      &.range::before { content: 'Range'; }
      &.firepower::before { content: 'Firepower'; }
    }
  }
  .weapon-line {
    display: table-row;

    > * {
      display: table-cell;
      padding: 0 0.5em;
      text-align: center;

      &.name { text-align: left; }
      &.boolean { text-align: right; }
      &.firepower {
        text-align: left;

        > :not(:last-child)::after { content: ', '; }

        .special-rules > li:last-child::after { content: none; }
      }
    }
  }
  .notes {
    padding: 0 0.5em;

    > * { margin-bottom: 0; }
    > .special-rules {
      font-style: italic;

      + * { display: inline; }
    }
    > :first-child::before {
      content: 'Notes: ';
      font-style: normal;
    }
  }

  .special-rules {
    padding: 0;

    &, > li { display: inline; }

    > li::after { content: ', '; }
    > li:last-child::after { content: '.'; }
  }
}

.unit {
  background: $_color_lighter;

  .stats, .weapon:first-child > .weapon-line:first-child {
    > *::before {
      color: $_color_gray;
      font-size: 1rem;
      letter-spacing: 0.03em;
      line-height: 1.2;
      position: relative;
      text-transform: uppercase;
      top: 2px;
    }
  }

  .stats > .name {
    font-weight: bold;

    &::before {
      font-weight: normal;
    }
  }

  @include grid-media($md-neat-grid) {
    .stats, .weapons {
      float: left;
      width: 50%;
    }
    .notes {
      clear: both;
    }
  }
}

.datasheet {
  margin: 0 0 ($_ / 2);
  overflow-x: auto;

  .unit:nth-child(odd) {
    background: $_body_background;
  }
}

[data-footnote]::after {
  content: ' ' attr(data-footnote);
  font-size: 1rem;
  font-weight: normal;
  line-height: 0;
  vertical-align: super;
}